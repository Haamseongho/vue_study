{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, _toDisplayString($props.data[0].title), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, \"영화 상세정보\", -1 /* CACHED */)), _createCommentVNode(\" \\r\\n      Modal은 자식임.. 부모에서 값을 변경하는건데, 자식에서 부모값을 변경하는건 불가함 \\r\\n      $emit('closeModal')는 부모 컴포넌트에서 정의한 closeModal 메소드를 실행하는 것임\\r\\n      closeModal -> 이벤트명으로 자식 컴포넌트가 버튼 클릭시 emit으로 부모한테 내보냄 \\r\\n      따라서 부모 컴포넌트에서 Modal 컴포넌트에 @closeModal로 해서 접근함.  그다음 거기서 값을 변경\\r\\n      \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('closeModal'))\n  }, \"닫기\")])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","$props","isModal","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","data","title","_createCommentVNode","onClick","_cache","$event","_ctx","$emit"],"sources":["C:\\Users\\KBDS\\Desktop\\vue3.0\\vue_study\\vue_project_1\\src\\components\\Modal.vue"],"sourcesContent":["<template>\r\n    <div class=\"modal\" v-if=\"isModal\">\r\n    <div class=\"inner\">\r\n      <h3> {{  data[0].title  }}</h3>\r\n      <p>영화 상세정보</p>\r\n      <!-- \r\n      Modal은 자식임.. 부모에서 값을 변경하는건데, 자식에서 부모값을 변경하는건 불가함 \r\n      $emit('closeModal')는 부모 컴포넌트에서 정의한 closeModal 메소드를 실행하는 것임\r\n      closeModal -> 이벤트명으로 자식 컴포넌트가 버튼 클릭시 emit으로 부모한테 내보냄 \r\n      따라서 부모 컴포넌트에서 Modal 컴포넌트에 @closeModal로 해서 접근함.  그다음 거기서 값을 변경\r\n      -->\r\n      <button @click=\"$emit('closeModal')\">닫기</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n    \r\n<script>\r\n    export default {\r\n        name: 'ModalComponent',\r\n        props: { // v-bind로 부모 컴포넌트에서 전달받는 값 --> props는 자료형으로만 정의\r\n            data: Array,\r\n            isModal: Boolean,\r\n            selectedMovie: Number\r\n        }\r\n    }\r\n</script>\r\n    \r\n<style>\r\n    \r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;;;EACNA,KAAK,EAAC;AAAO;;SADOC,MAAA,CAAAC,OAAO,I,cAAhCC,mBAAA,CAYI,OAZJC,UAYI,GAXJC,mBAAA,CAUM,OAVNC,UAUM,GATJD,mBAAA,CAA+B,YAAAE,gBAAA,CAAtBN,MAAA,CAAAO,IAAI,IAAIC,KAAK,kB,0BACtBJ,mBAAA,CAAc,WAAX,SAAO,qBACVK,mBAAA,oRAKG,EACHL,mBAAA,CAAgD;IAAvCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAgB,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}