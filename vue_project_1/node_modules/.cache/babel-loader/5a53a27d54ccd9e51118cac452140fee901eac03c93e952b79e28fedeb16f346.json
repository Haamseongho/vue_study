{"ast":null,"code":"export default {\n  name: 'EventComponent',\n  // Event에서 text를 Props로 부름 --> 타입만 적어두기\n  props: {\n    text: String,\n    isEventOpen: Boolean\n  },\n  data() {\n    return {\n      isOpen: true // 이벤트창이 열려있는지 여부\n    };\n  }\n};","map":{"version":3,"names":["name","props","text","String","isEventOpen","Boolean","data","isOpen"],"sources":["C:\\Users\\KBDS\\Desktop\\vue3.0\\vue_study\\vue_project_1\\src\\components\\Event.vue"],"sourcesContent":["<template>\r\n    <!-- 클래스 같은거 조건으로 달 때 객체 형태로 넘길 것-->\r\n    <div class=\"event\" :class=\"{ show: isOpen }\">\r\n        <p>\r\n            {{ text }}\r\n        </p>\r\n        <button @click=\"isOpen = false\">X</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'EventComponent',\r\n    // Event에서 text를 Props로 부름 --> 타입만 적어두기\r\n    props: {\r\n        text: String,\r\n        isEventOpen: Boolean,\r\n    },\r\n    data() {\r\n        return {\r\n            isOpen: true, // 이벤트창이 열려있는지 여부\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.event {\r\n    background: #444;\r\n    padding: 10px 20px;\r\n    color: #fff;\r\n    text-align: center;\r\n    font-size: small;\r\n    display: none;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.show {\r\n    display: flex;\r\n}\r\n\r\n.event p {\r\n    margin: 0;\r\n}\r\n\r\n.event button {\r\n    margin: 0;\r\n}\r\n</style>"],"mappings":"AAWA,eAAe;EACXA,IAAI,EAAE,gBAAgB;EACtB;EACAC,KAAK,EAAE;IACHC,IAAI,EAAEC,MAAM;IACZC,WAAW,EAAEC;EACjB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,IAAI,CAAE;IAClB;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}