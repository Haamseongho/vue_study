{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_Event = _resolveComponent(\"Event\");\n  const _component_Movies = _resolveComponent(\"Movies\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Navbar), _createCommentVNode(\" text: Props\"), _createVNode(_component_Event, {\n    text: $data.text\n  }, null, 8 /* PROPS */, [\"text\"]), _createCommentVNode(\" $event로 emit의 파라미터를 받음 \"), _createVNode(_component_Movies, {\n    data: $data.data,\n    onOpenModal: _cache[0] || (_cache[0] = $event => {\n      $data.isModal = true;\n      $data.selectedMovie = $event;\n    }),\n    onIncreaseLike: _cache[1] || (_cache[1] = $event => _ctx.increaseLike($event))\n  }, null, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" :data (v-bind)로 Modal로 보냄, 마찬가지로 :isModal, :selectedMovie로 해서 Modal로 보냄 (v-bind)\"), _createVNode(_component_Modal, {\n    data: $data.data,\n    isModal: $data.isModal,\n    selectedMovie: $data.selectedMovie,\n    onCloseModal: _cache[2] || (_cache[2] = $event => $data.isModal = false)\n  }, null, 8 /* PROPS */, [\"data\", \"isModal\", \"selectedMovie\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_Navbar","_createCommentVNode","_component_Event","text","$data","_component_Movies","data","onOpenModal","_cache","$event","isModal","selectedMovie","onIncreaseLike","_ctx","increaseLike","_component_Modal","onCloseModal"],"sources":["C:\\Users\\KBDS\\Desktop\\vue3.0\\vue_study\\vue_project_1\\src\\App.vue"],"sourcesContent":["<template>\r\n  <Navbar />\r\n  <!-- text: Props-->\r\n  <Event :text=\"text\"/>\r\n  <!-- $event로 emit의 파라미터를 받음 -->\r\n  <Movies \r\n    :data=\"data\"\r\n    @openModal=\"isModal = true; selectedMovie = $event\"\r\n    @increaseLike=\"increaseLike($event)\" \r\n  />\r\n  <!-- :data (v-bind)로 Modal로 보냄, 마찬가지로 :isModal, :selectedMovie로 해서 Modal로 보냄 (v-bind)-->\r\n  <Modal \r\n  :data=\"data\" \r\n  :isModal=\"isModal\" \r\n  :selectedMovie=\"selectedMovie\"\r\n  @closeModal=\"isModal = false\"\r\n  />\r\n  </template>\r\n<script>\r\nimport movie from './js/movie';  // export default로 내보낼 때 이용\r\nimport NavBarComponent from './components/Navbar.vue';\r\nimport ModalComponent from './components/Modal.vue';\r\nimport EventComponent from './components/Event.vue';\r\nimport MoviesComponent from './components/Movies.vue';\r\n\r\nexport default {\r\n    name: 'App',\r\n    data() {\r\n      return {\r\n        isModal: false,\r\n        data: movie,\r\n        selectedMovie: 0,\r\n        text: \"NETFLIX 강렬한 운명의 드라마, 경성크리처\",\r\n      }\r\n    },\r\n    methods: {\r\n      increateLike(index) {\r\n        this.data[index].like += 1\r\n      }\r\n    },\r\n    components : {\r\n      Navbar: NavBarComponent,\r\n      Modal: ModalComponent,\r\n      Event: EventComponent,\r\n      Movies: MoviesComponent\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n}\r\n\r\nbody {\r\n  max-width: 768px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3 {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\np {\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\nbutton {\r\n  margin-right: 10px;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.item {\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  padding: 1rem;\r\n}\r\n\r\n.item figure {\r\n  width: 30%;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.item img {\r\n  width: 100%;\r\n}\r\n\r\n.item .info {\r\n  width: 100%;\r\n}\r\n\r\n.modal {\r\n  background: rgba(0, 0, 0, 0.7);\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal .inner {\r\n  background: #fff;\r\n  width: 80%;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;6DACEA,YAAA,CAAUC,iBAAA,GACVC,mBAAA,gBAAmB,EACnBF,YAAA,CAAqBG,gBAAA;IAAbC,IAAI,EAAEC,KAAA,CAAAD;EAAI,mCAClBF,mBAAA,4BAA+B,EAC/BF,YAAA,CAIEM,iBAAA;IAHCC,IAAI,EAAEF,KAAA,CAAAE,IAAI;IACVC,WAAS,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA;MAAEL,KAAA,CAAAM,OAAO;MAASN,KAAA,CAAAO,aAAa,GAAGF,MAAM;IAAA;IACjDG,cAAY,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEI,IAAA,CAAAC,YAAY,CAACL,MAAM;qCAEpCR,mBAAA,qFAAwF,EACxFF,YAAA,CAKEgB,gBAAA;IAJDT,IAAI,EAAEF,KAAA,CAAAE,IAAI;IACVI,OAAO,EAAEN,KAAA,CAAAM,OAAO;IAChBC,aAAa,EAAEP,KAAA,CAAAO,aAAa;IAC5BK,YAAU,EAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,KAAA,CAAAM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}