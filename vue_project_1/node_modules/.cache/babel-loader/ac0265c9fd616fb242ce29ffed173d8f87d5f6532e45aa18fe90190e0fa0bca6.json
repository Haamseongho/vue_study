{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.isModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, _toDisplayString(_ctx.data[_ctx.selectedMovie].title), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, \"영화 상세정보\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.isModal = false)\n  }, \"닫기\")])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","_ctx","isModal","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","data","selectedMovie","title","onClick","_cache","$event"],"sources":["/Users/hamseongho/Desktop/vue3.0/movie-info/src/components/Modal.vue"],"sourcesContent":["<template>\n    <div class=\"modal\" v-if=\"isModal\">\n    <div class=\"inner\">\n      <h3> {{  data[selectedMovie].title  }}</h3>\n      <p>영화 상세정보</p>\n      <button @click=\"isModal = false\">닫기</button>\n    </div>\n  </div>\n</template>\n    \n<script>\n    export default {\n        name: 'ModalComponent',\n        \n    }\n</script>\n    \n<style>\n    \n</style>"],"mappings":";;;EACSA,KAAK,EAAC;;;EACNA,KAAK,EAAC;AAAO;;SADOC,IAAA,CAAAC,OAAO,I,cAAhCC,mBAAA,CAMI,OANJC,UAMI,GALJC,mBAAA,CAIM,OAJNC,UAIM,GAHJD,mBAAA,CAA2C,YAAAE,gBAAA,CAAlCN,IAAA,CAAAO,IAAI,CAACP,IAAA,CAAAQ,aAAa,EAAEC,KAAK,kB,0BAClCL,mBAAA,CAAc,WAAX,SAAO,qBACVA,mBAAA,CAA4C;IAAnCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEZ,IAAA,CAAAC,OAAO;KAAU,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}